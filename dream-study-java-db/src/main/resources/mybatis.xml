<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration  
     PUBLIC "-//mybatis.org//DTD Config 3.0//EN"  
     "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!-- 外部配置文件,主要是jdbc配置.但是和spring整合时已经不用 -->
	<properties></properties>
	<settings>
		<!-- 使用全局的二级缓存,只能控制二级缓存,不能控制一级缓存,默认不开启 -->
		<setting name="cacheEnabled" value="true" />
		<!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载。 -->
		<setting name="lazyLoadingEnabled" value="true" />
		<!-- 当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载。 -->
		<setting name="aggressiveLazyLoading" value="true" />
		<!-- 是否允许单条sql 返回多个数据集 (取决于驱动的兼容性) default:true -->
		<setting name="multipleResultSetsEnabled" value="true" />
		<!-- 是否可以使用列的别名 (取决于驱动的兼容性) default:true -->
		<setting name="useColumnLabel" value="true" />
		<!-- 允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行。 default:false -->
		<setting name="useGeneratedKeys" value="false" />
		<!-- 指定 MyBatis 如何自动映射 数据基表的列 NONE：不隐射 PARTIAL:部分 FULL:全部 -->
		<setting name="autoMappingBehavior" value="PARTIAL" />
		<!-- 这是默认的执行类型 （SIMPLE: 简单； REUSE: 执行器可能重复使用prepared statements语句；BATCH: 执行器可以重复执行语句和批量更新） -->
		<setting name="defaultExecutorType" value="SIMPLE" />

		<setting name="defaultStatementTimeout" value="25" />

		<setting name="defaultFetchSize" value="100" />

		<setting name="safeRowBoundsEnabled" value="false" />
		<!-- 使用驼峰命名法将数据库字段转换java驼峰字段 -->
		<setting name="mapUnderscoreToCamelCase" value="true" />
		<!-- 设置本地缓存范围 session:就会有数据的共享 statement:语句范围 (这样就不会有数据的共享 ) defalut:session -->
		<setting name="localCacheScope" value="SESSION" />
		<!-- 默认为OTHER,为了解决oracle插入null报错的问题要设置为NULL -->
		<setting name="jdbcTypeForNull" value="NULL" />
		<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" />
	</settings>

	<!-- 别名,typeAlias和package最好只用一个,避免冲突.别名不区分大小写 -->
	<!-- mybatis已经取好的别名 -->
	<!-- _byte:byte;_long:long;_short:short;_int:int;_integer:int;_double:double;_float:float;_boolean:boolean -->
	<!-- string:String;byte:Byte;long:Long;short:Short;int:Integer;integer:Integer;double:Double;fload:Float -->
	<!-- boolean:Boolean;date:Date;decimal:BigDecimal;bigdecimal:BigDecimal;object:Object;map:Map -->
	<!-- hashmap:HashMap;list:List;arraylist:ArrayList;collection:Collection;iterator:Iterator -->
	<typeAliases>
		<!-- type代表某个实体类,alias表示在mapper.xml中使用该实体类时,只需要写别名,不需要写完整的包路径名 -->
		<typeAlias type="com.wy.entity.User" alias="user" />
		<!-- name表示实体类需要扫描的包, 在mapper.xml配置文件中使用实体类参数时,只需要写java实体类名即可 -->
		<!-- 该方式别名可能会发生冲突,为避免冲突,可在实体类上加注解Alias,实体类上的注解是权限最大的 -->
		<package name="com.wy.entity" />
	</typeAliases>

	<!-- 自定义映射数据库类型和java类型之间的关系 -->
	<typeHandlers></typeHandlers>

	<!-- 插件配置 -->
	<plugins>
		<!-- 分页插件 -->
		<plugin interceptor="com.github.pagehelper.PageInterceptor"></plugin>
	</plugins>
	<!-- 默认使用那个环境,mysql1可根据环境在配置文件中修改.配置可见{@link org.apache.ibatis.session.Configuration} -->
	<environments default="mysql1">
		<environment id="mysql1">
			<!-- 使用什么事务类型,jdbc是数据库默认类型,还有MANAGED以及自定义,自定义需要实现相关类 -->
			<transactionManager type="JDBC"></transactionManager>
			<!-- 使用连接池,POOLED,UNPOOLED,JNDI -->
			<dataSource type="POOLED">
				<!-- 数据库连接 -->
				<property name="driver" value="com.mysql.jdbc.Driver" />
				<property name="url" value="jdbc:mysql://localhost:3306/simpleoa" />
				<property name="username" value="root" />
				<property name="password" value="123456" />
			</dataSource>
		</environment>
		<environment id="oracle1">
			<transactionManager type="JDBC"></transactionManager>
			<dataSource type="POOLED">
				<property name="driver" value="com.mysql.jdbc.Driver" />
				<property name="url" value="jdbc:mysql://localhost:3306/simpleoa" />
				<property name="username" value="root" />
				<property name="password" value="123456" />
			</dataSource>
		</environment>
		<environment id="sqlserver1">
			<transactionManager type="JDBC"></transactionManager>
			<dataSource type="POOLED">
				<property name="driver" value="com.mysql.jdbc.Driver" />
				<property name="url" value="jdbc:mysql://localhost:3306/simpleoa" />
				<property name="username" value="root" />
				<property name="password" value="123456" />
			</dataSource>
		</environment>
	</environments>

	<!-- 支持多数据库厂商,在mapper.xml中可以使用id相同的标签,但是databaseid要不一样 -->
	<!-- type:得到数据库厂商标识,根据标识来执行不同sql,详见{@link org.apache.ibatis.session.Configuration} -->
	<databaseIdProvider type="DB_VENDOR">
		<!-- name是mybatis自带的数据库类型,value中自定义对应的数据库类型别名, -->
		<!-- 在mapper.xml的databaseid中使用value的值,mybatis会自动根据数据库类型使用sql -->
		<property name="MySql" value="mysql" />
		<property name="Oracle" value="oracle"/>
		<property name="SQL Server" value="sqlserver"/>
	</databaseIdProvider>

	<mappers>
		<!-- 包名中所有的接口都将扫描,xml的资源文件和接口类都需要放到里面,且xml文件和接口类名要相同 -->
		<!-- <package name="com.wy.mapper" /> -->
		<!-- 扫描单个类 -->
		<mapper resource="mapper/UserMapper.xml" />
	</mappers>
</configuration>